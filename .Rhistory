install.packages("kernsmooth")
install.packages("KernSmooth")
source("KernSmooth")
library(KernSmooth)
windows()
quartz()
postscript()
?ppois
ppois(10, 15)
install.packages(
swirl
)
install.packages("swirl")
install_from_swirl("Statistical Inference")
library(swirl)
install_from_swirl("Statistical Inference")
swirl()
11/12
deck
52
1/13
0
3/13
2/51
install_from_swirl("Getting and Cleaning Data")
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf<-read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package=="swirl")
filter(cran, r_version == "3.1.10", country=="US")
filter(cran, r_version == "3.1.1", country=="US")
?Comparison
filter(cran, r_version <= "3.0.2", country=="IN")
filter(cran, country=="US"|country=="IN")
filter(cran, size>100500, r_os=="linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, !is.na(r_version))
cran2<-select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3<-select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb=size_mb/2^10)
mutate(cran3, correct_size=size+1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran<-tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package<-group_by(cran, package)
by_package
summarize(cran, avg_pkg=mean(size))
summarize(by_package, avg_pkg=mean(size))
summarize(by_package, mean(size))
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs=0.99)
top_unique<-filter(pack_sum, unique>465)
View(top_unique)
top_unique_sorted<-arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
submit()
?myplot
myplot(34)
myplot(33.3)
myplot(30)
myplot(28)
z<-qnorm(0.95)
pnorm(30+z,mean=30,lower.tail = FALSE)
pnorm(30+z,mean=32,lower.tail = FALSE)
pnorm(30+z,mean=32,lower.tail = FALSE, sd=1)
pnorm(30+z,mean=32,lower.tail = FALSE, sd=2)
pnorm(30+z*2,mean=32,lower.tail = FALSE, sd=2)
power.t.test(n=16, delta=2/4, sd=1, type="one.sample", alt="one.sided")$power
power.t.test(n=16, delta=2, sd=4, type="one.sample", alt="one.sided")$power
power.t.test(n=16, delta=100, sd=200, type="one.sample", alt="one.sided")$power
power.t.test(power=0.8, delta=2/4, sd=1, type="one.sample", alt="one.sided")$n
power.t.test(power=0.8, delta=2, sd=4, type="one.sample", alt="one.sided")$n
power.t.test(power=0.8, delta=100, sd=200, type="one.sample", alt="one.sided")$n
power.t.test(power=0.8, n=26, sd=1, type="one.sample", alt="one.sided")$delta
power.t.test(power=0.8, n=27, sd=1, type="one.sample", alt="one.sided")$delta
require(devtools)
install.packages('devtools')
require(devtools)
install_github('rCharts', 'ramnathv')
install.packages('rtools')
install.packages('Rtools')
library(devtools)
install_github('rCharts', 'ramnathv/rCharts')
install_github('rCharts', 'ramnathv')
dTable(airquality, sPaginationType="full_numbers")
library(rCharts)
dTable(airquality, sPaginationType="full_numbers")
x <- c(0.18, -1.54, 0.42, 0.95, 0.18, 0.42, 0.42)
lm(x)
lm(x ~ x)
mean(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x)
plot(x,y)
?lm
data("mtcars")
lm(mpg~weight, data=mtcars)
head(mtcars)
lm(mpg~wt, data=mtcars)
0.4*1.5
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
x<-x-mean(x)
x
std(x)
sd(X)
var(x)
x<-x/sqrt(var(x))
x
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
setwd("I:/Courses/DataScience/DataProducts/Presentation/shiny_app_presentation")
library(shiny)
library(slidify)
slidify("index.Rmd")
browseURL("index.html")
publish(user='michaelbausor', repo='https://github.com/michaelbausor/DataProductsPresentation.git')
publish(user='michaelbausor', repo='DataProductsPresentation')
publish(user='michaelbausor', repo='DataProductsPresentation')
slidify("present.Rmd")
browseURL("present.html")
setwd("I:/Courses/DataScience/DataProducts/Presentation/shiny_app_presentation/DataProductsPresentation")
slidify("present.Rmd")
browseURL("present.html")
slidify("present.Rmd")
browseURL("present.html")
setwd("I:/Courses/DataScience/DataProducts/Presentation/shiny_app_presentation/DataProductsPresentation")
slidify("present.Rmd")
browseURL("present.html")
slidify("present.Rmd")
browseURL("present.html")
