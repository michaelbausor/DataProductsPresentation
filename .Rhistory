install_from_swirl("Statistical Inference")
swirl()
11/12
deck
52
1/13
0
3/13
2/51
install_from_swirl("Getting and Cleaning Data")
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf<-read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package=="swirl")
filter(cran, r_version == "3.1.10", country=="US")
filter(cran, r_version == "3.1.1", country=="US")
?Comparison
filter(cran, r_version <= "3.0.2", country=="IN")
filter(cran, country=="US"|country=="IN")
filter(cran, size>100500, r_os=="linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, !is.na(r_version))
cran2<-select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3<-select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb=size_mb/2^10)
mutate(cran3, correct_size=size+1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran<-tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package<-group_by(cran, package)
by_package
summarize(cran, avg_pkg=mean(size))
summarize(by_package, avg_pkg=mean(size))
summarize(by_package, mean(size))
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs=0.99)
top_unique<-filter(pack_sum, unique>465)
View(top_unique)
top_unique_sorted<-arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
submit()
?myplot
myplot(34)
myplot(33.3)
myplot(30)
myplot(28)
z<-qnorm(0.95)
pnorm(30+z,mean=30,lower.tail = FALSE)
pnorm(30+z,mean=32,lower.tail = FALSE)
pnorm(30+z,mean=32,lower.tail = FALSE, sd=1)
pnorm(30+z,mean=32,lower.tail = FALSE, sd=2)
pnorm(30+z*2,mean=32,lower.tail = FALSE, sd=2)
power.t.test(n=16, delta=2/4, sd=1, type="one.sample", alt="one.sided")$power
power.t.test(n=16, delta=2, sd=4, type="one.sample", alt="one.sided")$power
power.t.test(n=16, delta=100, sd=200, type="one.sample", alt="one.sided")$power
power.t.test(power=0.8, delta=2/4, sd=1, type="one.sample", alt="one.sided")$n
power.t.test(power=0.8, delta=2, sd=4, type="one.sample", alt="one.sided")$n
power.t.test(power=0.8, delta=100, sd=200, type="one.sample", alt="one.sided")$n
power.t.test(power=0.8, n=26, sd=1, type="one.sample", alt="one.sided")$delta
power.t.test(power=0.8, n=27, sd=1, type="one.sample", alt="one.sided")$delta
require(devtools)
install.packages('devtools')
require(devtools)
install_github('rCharts', 'ramnathv')
install.packages('rtools')
install.packages('Rtools')
library(devtools)
install_github('rCharts', 'ramnathv/rCharts')
install_github('rCharts', 'ramnathv')
dTable(airquality, sPaginationType="full_numbers")
library(rCharts)
dTable(airquality, sPaginationType="full_numbers")
x <- c(0.18, -1.54, 0.42, 0.95, 0.18, 0.42, 0.42)
lm(x)
lm(x ~ x)
mean(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x)
plot(x,y)
?lm
data("mtcars")
lm(mpg~weight, data=mtcars)
head(mtcars)
lm(mpg~wt, data=mtcars)
0.4*1.5
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
x<-x-mean(x)
x
std(x)
sd(X)
var(x)
x<-x/sqrt(var(x))
x
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
setwd("I:/Courses/DataScience/PracticalMachineLearning")
training<-read.csv('pml-training')
training<-read.csv('pml-training.csv')
testing<-read.csv('pml-testing.csv')
names<-c("roll_belt","pitch_belt","yaw_belt","total_accel_belt","gyros_belt_x","gyros_belt_y","gyros_belt_z","accel_belt_x","accel_belt_y","accel_belt_z","magnet_belt_x","magnet_belt_y","magnet_belt_z","roll_arm","pitch_arm","yaw_arm","total_accel_arm","gyros_arm_x","gyros_arm_y","gyros_arm_z","accel_arm_x","accel_arm_y","accel_arm_z","magnet_arm_x","magnet_arm_y","magnet_arm_z","roll_dumbbell","pitch_dumbbell","yaw_dumbbell","total_accel_dumbbell","gyros_dumbbell_x","gyros_dumbbell_y","gyros_dumbbell_z","accel_dumbbell_x","accel_dumbbell_y","accel_dumbbell_z","magnet_dumbbell_x","magnet_dumbbell_y","magnet_dumbbell_z","roll_forearm","pitch_forearm","yaw_forearm","total_accel_forearm","gyros_forearm_x","gyros_forearm_y","gyros_forearm_z","accel_forearm_x","accel_forearm_y","accel_forearm_z","magnet_forearm_x","magnet_forearm_y","magnet_forearm_z")
names<-c("roll_belt","pitch_belt","yaw_belt","total_accel_belt","gyros_belt_x","gyros_belt_y","gyros_belt_z","accel_belt_x","accel_belt_y","accel_belt_z","magnet_belt_x","magnet_belt_y","magnet_belt_z","roll_arm","pitch_arm","yaw_arm","total_accel_arm","gyros_arm_x","gyros_arm_y","gyros_arm_z","accel_arm_x","accel_arm_y","accel_arm_z","magnet_arm_x","magnet_arm_y","magnet_arm_z","roll_dumbbell","pitch_dumbbell","yaw_dumbbell","total_accel_dumbbell","gyros_dumbbell_x","gyros_dumbbell_y","gyros_dumbbell_z","accel_dumbbell_x","accel_dumbbell_y","accel_dumbbell_z","magnet_dumbbell_x","magnet_dumbbell_y","magnet_dumbbell_z","roll_forearm","pitch_forearm","yaw_forearm","total_accel_forearm","gyros_forearm_x","gyros_forearm_y","gyros_forearm_z","accel_forearm_x","accel_forearm_y","accel_forearm_z","magnet_forearm_x","magnet_forearm_y","magnet_forearm_z", "classe")
names
training_red <- training[,names]
library(caret)
library(ISLR)
install.packages(ISLR)
install.packages("ISLR")
data(Wage)
inTrain <- createDataPartition(y=train$classe, p=0.7, list=FALSE)
inTrain <- createDataPartition(y=training_red$classe, p=0.7, list=FALSE)
tred <- training_red[inTrain,]
ttest <- training_red[-inTrain,]
modFit <- train(classe ~ ., data = tred, method="rf", prox=TRUE)
source("names.R")
View(ttest)
source("names.R")
source("names.R")
modFit <- train(classe ~ ., data = tred, method="rf", prox=TRUE)
modFit
source("names.R")
modFit <- train(classe ~ ., data = tred, method="rf", prox=TRUE)
pred <- predict(modFit, ttest)
ttest$predRight <- pred=ttest$classe
ttest$predRight <- pred==ttest$classe
table(pred, ttest$classe)
source("names.R")
modFit <- train(classe ~ ., data = tred, method="rf", prox=TRUE)
modFit
pred <- predict(modFit, ttest)
ttest$predRight <- pred==ttest$classe
table(pred, ttest$classe)
head(tred)
head(tred)
head(tred[,-1])
preProc <- preProcess(tred[,-1],method="pca")
preProc
trainPC <- predict(preProc, tred[,-1])
modelFit <- train(tred$classe ~ ., method="glm",data=trainPC)
modelFit <- train(tred$classe ~ ., method="glm", preProcess="pca", data=tred)
source("names.R")
modelFit <- train(tred$classe ~ ., method="glm", preProcess="pca", data=tred)
preProc <- preProcess(tred[,-1],method="pca")
preProc
tt<-predict(preProc, tred[,-1])
plot(tt[,1], tt[,2])
plot(tt[,1], tt[,3])
plot(tt[,2], tt[,3])
plot(tt[,2], tt[,4])
plot(tt[,1], tt[,4])
head(tt)
tt$classe<-tred$classe
head(tt)
modelFit<-train(classe ~ ., data = tt, method="rf", prox=TRUE)
tts<-tt[,c("classe", "PC1", "PC2", "PC3", "PC4")]
modelFit<-train(classe ~ ., data = tts, method="rf", prox=TRUE)
modelFit
plot(tt[,1], tt[,2])
plot(tt[,1], tt[,2],colour=tts$classe)
qplot(tt[,1], tt[,2],colour=tts$classe)
head(tt)
modelFit<-train(classe ~ ., data = tt, method="rf", prox=TRUE)
modelFit
?preProcess
source("names.R")
modelFit
confusionMatrix(testing_red_part$classe, predict(modelFit, pca_test))
source("names.R")
confusionMatrix(testing_red_part$classe, predict(modelFit, testing_red_part))
modelFit
set.seed(1)
source("names.R")
modelFit
confusionMatrix(testing_red_part$classe, predict(modelFit, testing_red_part))
predict(modelFit, testing_red_part[1:3,])
predict(modelFit, testing_red_part[1000:1003,])
testing_red_part[1000:1003,]
testing_red_part[2000:2003,]
predict(modelFit, testing_red_part[2000:2003,])
test_red<-testing[,names]
testing
names1 <- c(roll_belt","pitch_belt","yaw_belt","total_accel_belt","gyros_belt_x","gyros_belt_y","gyros_belt_z","accel_belt_x","accel_belt_y","accel_belt_z","magnet_belt_x","magnet_belt_y","magnet_belt_z","roll_arm","pitch_arm","yaw_arm","total_accel_arm","gyros_arm_x","gyros_arm_y","gyros_arm_z","accel_arm_x","accel_arm_y","accel_arm_z","magnet_arm_x","magnet_arm_y","magnet_arm_z","roll_dumbbell","pitch_dumbbell","yaw_dumbbell","total_accel_dumbbell","gyros_dumbbell_x","gyros_dumbbell_y","gyros_dumbbell_z","accel_dumbbell_x","accel_dumbbell_y","accel_dumbbell_z","magnet_dumbbell_x","magnet_dumbbell_y","magnet_dumbbell_z","roll_forearm","pitch_forearm","yaw_forearm","total_accel_forearm","gyros_forearm_x","gyros_forearm_y","gyros_forearm_z","accel_forearm_x","accel_forearm_y","accel_forearm_z","magnet_forearm_x","magnet_forearm_y","magnet_forearm_z")
names1 <- c("roll_belt","pitch_belt","yaw_belt","total_accel_belt","gyros_belt_x","gyros_belt_y","gyros_belt_z","accel_belt_x","accel_belt_y","accel_belt_z","magnet_belt_x","magnet_belt_y","magnet_belt_z","roll_arm","pitch_arm","yaw_arm","total_accel_arm","gyros_arm_x","gyros_arm_y","gyros_arm_z","accel_arm_x","accel_arm_y","accel_arm_z","magnet_arm_x","magnet_arm_y","magnet_arm_z","roll_dumbbell","pitch_dumbbell","yaw_dumbbell","total_accel_dumbbell","gyros_dumbbell_x","gyros_dumbbell_y","gyros_dumbbell_z","accel_dumbbell_x","accel_dumbbell_y","accel_dumbbell_z","magnet_dumbbell_x","magnet_dumbbell_y","magnet_dumbbell_z","roll_forearm","pitch_forearm","yaw_forearm","total_accel_forearm","gyros_forearm_x","gyros_forearm_y","gyros_forearm_z","accel_forearm_x","accel_forearm_y","accel_forearm_z","magnet_forearm_x","magnet_forearm_y","magnet_forearm_z")
test_red<-testing[,names1]
predict(modelFit, test_red)
answers<-predict(modelFit, test_red)
source("gen_answers.R")
pml_write_files(answers)
modelFit
getTree(modelFit$finalModel, k=2)
getTree(modelFit$finalModel)
modelFit$finalModel
modelFit$modelInfo
modelFit[1]
modelFit[0]
modelFit[2]
modelFit[3]
modelFit$modelType
modelFit$finalModel
modelFit$finalModel$mtry
confusionMatrix(testing_red_part$classe, predict(modelFit, testing_red_part))
confusionMatrix(training_red_part$classe, predict(modelFit, training_red_part))
modelFIt
modelFit
confusionMatrix(training_red_part$classe, predict(modelFit, training_red_part))
confusionMatrix(testing_red_part$classe, predict(modelFit, testing_red_part))
answers
confusionMatrix(testing$classe, predict(modelFit, testing))
confusionMatrix(test_red$classe, predict(modelFit, test_red))
confusionMatrix(training$classe, predict(modelFit, training))
modelFit$finalModel
modelFit
cm<-confusionMatrix(training$classe, predict(modelFit, training))
cm
cm$overall
cm$overall$Accuracy
cm$overall$accuracy
cm$overall
cm$positive
cm$table
confusionMatrix(training_red_part$classe, predict(modelFit, training_red_part))
confusionMatrix(training_red_part$classe, predict(modelFit, testing_red_part))
confusionMatrix(testing_red_part$classe, predict(modelFit, testing_red_part))
variable_names <- c("roll_belt","pitch_belt","yaw_belt","total_accel_belt","gyros_belt_x","gyros_belt_y","gyros_belt_z","accel_belt_x","accel_belt_y","accel_belt_z","magnet_belt_x","magnet_belt_y","magnet_belt_z","roll_arm","pitch_arm","yaw_arm","total_accel_arm","gyros_arm_x","gyros_arm_y","gyros_arm_z","accel_arm_x","accel_arm_y","accel_arm_z","magnet_arm_x","magnet_arm_y","magnet_arm_z","roll_dumbbell","pitch_dumbbell","yaw_dumbbell","total_accel_dumbbell","gyros_dumbbell_x","gyros_dumbbell_y","gyros_dumbbell_z","accel_dumbbell_x","accel_dumbbell_y","accel_dumbbell_z","magnet_dumbbell_x","magnet_dumbbell_y","magnet_dumbbell_z","roll_forearm","pitch_forearm","yaw_forearm","total_accel_forearm","gyros_forearm_x","gyros_forearm_y","gyros_forearm_z","accel_forearm_x","accel_forearm_y","accel_forearm_z","magnet_forearm_x","magnet_forearm_y","magnet_forearm_z")
mtcars
?mtcars
library(ggplot2)
qplot(mtcars$mpg)
barplot(mtcars$mpg)
ggplot(mtcars, aes(y=mpg)) + geom_bar(stat="bin")
ggplot(mtcars, aes(x=mpg)) + geom_bar(stat="bin")
ggplot(mtcars, aes(x=xlabels, y=mpg)) + geom_bar(stat="bin")
row.names(mtcars)
ggplot(mtcars, aes(x=row.names(mtcars), y=mpg)) + geom_bar(stat="bin")
ggplot(mtcars, aes(x=row.names(mtcars), y=mpg)) + geom_bar()
?geom_bar
ggplot(mtcars, aes(x=row.names(mtcars), y=mpg)) + geom_bar(stat="identity")
ggplot(mtcars, aes(x=row.names(mtcars), y=mpg), colour=am) + geom_bar(stat="identity")
ggplot(mtcars, aes(x=row.names(mtcars), y=mpg), colour=am) + geom_bar(stat="identity", colour=am)
ggplot(mtcars, aes(x=row.names(mtcars), y=mpg), colour=am) + geom_bar(stat="identity", colour=mtcars$am)
ggplot(mtcars, aes(x=row.names(mtcars), y=mpg), colour=gear) + geom_bar(stat="identity", colour=mtcars$am)
ggplot(mtcars, aes(x=row.names(mtcars), y=mpg), colour=gear) + geom_bar(stat="identity")
mtcars$carb
ggplot(mtcars, aes(x=row.names(mtcars), y=mpg), colour=carb) + geom_bar(stat="identity")
ggplot(mtcars, aes(x=row.names(mtcars), y=mpg), group=carb) + geom_bar(stat="identity")
ggplot(mtcars, aes(x=gear, y=mpg), group=carb) + geom_bar(stat="identity")
ggplot(mtcars, aes(x=gear, y=mpg), colour=carb) + geom_bar(stat="identity")
ggplot(mtcars, aes(x=gear, y=mpg), colours=carb) + geom_bar(stat="identity")
ggplot(mtcars, aes(x=gear, y=mpg), color=carb) + geom_bar(stat="identity")
ggplot(mtcars, aes(x=gear, y=mpg), colors=carb) + geom_bar(stat="identity")
ggplot(mtcars, aes(x=gear, y=mpg), fill=carb) + geom_bar(stat="identity")
ggplot(mtcars, aes(x=gear, y=mpg), fill=carb*100) + geom_bar(stat="identity")
ggplot(mtcars, aes(x=gear, y=mpg, fill=carb*100)) + geom_bar(stat="identity")
ggplot(mtcars, aes(x=row.names(mtcars), y=mpg, fill=carb*100)) + geom_bar(stat="identity")
ggplot(mtcars, aes(x=row.names(mtcars), y=mpg, colour=am)) + geom_bar(stat="identity")
ggplot(mtcars, aes(x=row.names(mtcars), y=mpg, group=am)) + geom_bar(stat="identity")
ggplot(mtcars, aes(x=row.names(mtcars), y=mpg, fil=am)) + geom_bar(stat="identity")
ggplot(mtcars, aes(x=row.names(mtcars), y=mpg, fill=am)) + geom_bar(stat="identity")
?aes
?ggplot
ggplot(mtcars, aes(x=row.names(mtcars), y=mpg, fill=am, group=am)) + geom_bar(stat="identity")
ggplot(mtcars, aes(x=am, y=mpg, fill=am, group=am)) + geom_bar(stat="identity")
ggplot(mtcars, aes(x=am, y=mpg, fill=am)) + geom_bar(stat="identity")
ggplot(mtcars, aes(x=am, y=mpg, fill=am)) + geom_bar(stat="identity")
ggplot(mtcars, aes(y=mpg, fill=am)) + geom_bar(stat="identity")
ggplot(mtcars, aes(y=mpg)) + geom_bar(stat="identity")
ggplot(mtcars, aes(x=0, y=mpg)) + geom_bar(stat="identity")
ggplot(mtcars, aes(x=am, y=mpg, fill=am, group=am)) + geom_bar(stat="identity") +opts(axis.text.x=theme_text(angle=-90))
ggplot(mtcars, aes(x=am, y=mpg, fill=am, group=am)) + geom_bar(stat="identity") +theme(axis.text.x=theme_text(angle=-90))
ggplot(mtcars, aes(x=am, y=mpg, fill=am, group=am)) + geom_bar(stat="identity") +theme(axis.text.x=element_text(angle=-90))
ggplot(mtcars, aes(x=row.names(mtcars), y=mpg, fill=am, group=am)) + geom_bar(stat="identity") +theme(axis.text.x=element_text(angle=-90))
ggplot(mtcars, aes(x=row.names(mtcars), y=mpg, fill=am, group=am)) + geom_bar(stat="identity") +theme(axis.text.x=element_text(angle=90))
ggplot(mtcars, aes(x=row.names(mtcars), y=mpg, fill=am, group=am)) + geom_bar(stat="identity", legend=FALSE) +theme(axis.text.x=element_text(angle=90))
ggplot(mtcars, aes(x=row.names(mtcars), y=mpg, fill=am, group=am)) + geom_bar(stat="identity", show_guide=FALSE) +theme(axis.text.x=element_text(angle=90))
ggplot(mtcars, aes(x=row.names(mtcars), y=mpg, fill=am, group=am, show_guide=FALSE)) + geom_bar(stat="identity", show_guide=FALSE) +theme(axis.text.x=element_text(angle=90))
ggplot(mtcars, aes(x=row.names(mtcars), y=mpg, fill=am, group=am, show_guide=FALSE)) + geom_bar(stat="identity", show_guide=FALSE) +theme(axis.text.x=element_text(angle=90), show_guide=FALSE)
ggplot(mtcars, aes(x=row.names(mtcars), y=mpg, fill=am, group=am, show_guide=FALSE)) + geom_bar(stat="identity", show_guide=FALSE) +theme(axis.text.x=element_text(angle=90))
ggplot(mtcars, aes(x=row.names(mtcars), y=mpg, fill=am, group=am, show_guide=FALSE)) + geom_bar(stat="identity", guide=FALSE) +theme(axis.text.x=element_text(angle=90))
ggplot(mtcars, aes(x=row.names(mtcars), y=mpg, fill=am, group=am, guide=FALSE)) + geom_bar(stat="identity", guide=FALSE) +theme(axis.text.x=element_text(angle=90))
ggplot(mtcars, aes(x=row.names(mtcars), y=mpg, fill=am, group=am, guide=FALSE)) + geom_bar(stat="identity", guide=FALSE) +theme(axis.text.x=element_text(angle=90), legend.position="none")
ggplot(mtcars, aes(x=row.names(mtcars), y=mpg, fill=am, group=am, guide=FALSE)) + geom_bar(stat="identity", guide=FALSE) +theme(axis.text.x=element_text(angle=90), legend.position="none") + stat_summary(fun.y="mean", geom="bar")
ggplot(mtcars, aes(x=row.names(mtcars), y=mpg, fill=am, group=am, guide=FALSE)) +theme(axis.text.x=element_text(angle=90), legend.position="none") + stat_summary(fun.y="mean", geom="bar")
ggplot(mtcars, aes(x=row.names(mtcars), y=mpg, fill=am, group=am, guide=FALSE)) + theme(axis.text.x=element_text(angle=90), legend.position="none") + stat_summary(fun.y="mean", geom="bar")
ggplot(mtcars, aes(x=row.names(mtcars), y=mpg, fill=am, group=am, guide=FALSE)) + theme(axis.text.x=element_text(angle=90), legend.position="none") + stat_summary(fun.y="mean", geom="line")
ggplot(mtcars, aes(x=am, y=mpg, fill=am, group=am, guide=FALSE)) + theme(axis.text.x=element_text(angle=90), legend.position="none") + stat_summary(fun.y="mean", geom="line")
ggplot(mtcars, aes(x=am, y=mpg, fill=am, group=am, guide=FALSE)) + theme(axis.text.x=element_text(angle=90), legend.position="none") + stat_summary(fun.y="mean", geom="bar")
ggplot(mtcars, aes(x=am, y=mpg, fill=am, group=am, guide=FALSE)) + theme(axis.text.x=element_text(angle=90), legend.position="none") + stat_summary(fun.y="mean", geom="bar") + geom_errorbar(aes(ymin=mpg-ci, ymax=mpg+ci))
library(dplyr)
?ddply
ddply(mtcars, .(am), summarise, mean=mean(dt))
library(plyr)
ddply(mtcars, .(am), summarise, mean=mean(dt))
ddply(mtcars, .(am), summarise, mean=mean(mpg))
library(reshape)
melted<-melt(mtcars, id.vars = c("am", "mpg"))
grouped <- group_by(melted, am, mpg)
summarise(grouped)
summarise(grouped, mean=mean(value))
summarise(grouped, mean=mean(value)
)
ggplot(mtcars, aes(x=wt, y=mpg, fill=am, group=am, guide=FALSE)) + geom_bar(stat="identity", guide=FALSE) +theme(axis.text.x=element_text(angle=90), legend.position="none")
ggplot(mtcars, aes(x=wt, y=mpg, fill=am, group=am, guide=FALSE)) + geom_line() +theme(axis.text.x=element_text(angle=90), legend.position="none")
ggplot(mtcars, aes(x=wt, y=mpg, fill=am)) + geom_line() +theme(axis.text.x=element_text(angle=90), legend.position="none")
ggplot(mtcars, aes(x=wt, y=mpg, fill=am)) + geom_point() +theme(axis.text.x=element_text(angle=90), legend.position="none")
ggplot(mtcars, aes(x=wt, y=mpg, fill=am, group=am)) + geom_point() +theme(axis.text.x=element_text(angle=90), legend.position="none")
ggplot(mtcars, aes(x=wt, y=mpg, fill=am, group=am)) + geom_point() +theme(axis.text.x=element_text(angle=90))
ggplot(mtcars, aes(x=wt, y=mpg, fill=am, group=factor(am)) + geom_point() +theme(axis.text.x=element_text(angle=90))
ggplot(mtcars, aes(x=wt, y=mpg, fill=factor(am), group=factor(am)) + geom_point() +theme(axis.text.x=element_text(angle=90))
factor(mtcars$am)
mtcars$am
ggplot(mtcars, aes(x=wt, y=mpg, group=factor(am)) + geom_point() +theme(axis.text.x=element_text(angle=90))
)
ggplot(mtcars, aes(x=wt, y=mpg, group=factor(am))) + geom_point() +theme(axis.text.x=element_text(angle=90))
ggplot(mtcars, aes(x=wt, y=mpg, group=factor(am))) + geom_point()
ggplot(mtcars, aes(x=wt, y=mpg, group=factor(am), colour = group)) + geom_point()
ggplot(mtcars, aes(x=wt, y=mpg, colour=factor(am), colour = group)) + geom_point()
?mtcars
ggplot(mtcars, aes(x=wt, y=mpg, colour=factor(am), colour = group)) + geom_point()
?mtcars
ggplot(mtcars, aes(x=row.names(mtcars), y=mpg, fill=am, group=am, guide=FALSE)) + geom_bar(stat="identity", guide=FALSE) +theme(axis.text.x=element_text(angle=90), legend.position="none")
ggplot(mtcars, aes(x=row.names(mtcars), y=mpg, colour=am, guide=FALSE)) + geom_bar(stat="identity", guide=FALSE) +theme(axis.text.x=element_text(angle=90), legend.position="none")
ggplot(mtcars, aes(x=row.names(mtcars), y=mpg, fill=am, guide=FALSE)) + geom_bar(stat="identity", guide=FALSE) +theme(axis.text.x=element_text(angle=90), legend.position="none")
ggplot(mtcars, aes(x=row.names(mtcars), y=mpg, fill=factor(am), guide=FALSE)) + geom_bar(stat="identity", guide=FALSE) +theme(axis.text.x=element_text(angle=90), legend.position="none")
ggplot(mtcars, aes(x=row.names(mtcars), y=mpg, fill=factor(am), guide=FALSE)) + geom_bar(stat="identity", guide=FALSE) +theme(axis.text.x=element_text(angle=90))
trans<-mtcars$am
revalue(trans,c("0"="Automatic", "1"="Manual"))
trans<-factor(mtcars$am)
revalue(trans,c("0"="Automatic", "1"="Manual"))
ggplot(mtcars, aes(x=row.names(mtcars), y=mpg, fill=trans, guide=FALSE)) + geom_bar(stat="identity", guide=FALSE) +theme(axis.text.x=element_text(angle=90))
trans2<-revalue(trans,c("0"="Automatic", "1"="Manual"))
ggplot(mtcars, aes(x=row.names(mtcars), y=mpg, fill=trans2, guide=FALSE)) + geom_bar(stat="identity", guide=FALSE) +theme(axis.text.x=element_text(angle=90))
ggplot(mtcars, aes(x=wt, y=mpg, colour=factor(am), colour = group)) + geom_point()
ggplot(mtcars, aes(x=wt, y=mpg, colour=factor(am), colour = group)) + geom_point()
ggplot(mtcars, aes(x=wt, y=mpg, colour=factor(am))) + geom_point()
ggplot(mtcars, aes(x=wt, y=mpg, colour=trans2) + geom_point()
)
ggplot(mtcars, aes(x=wt, y=mpg, colour=trans2)) + geom_point()
fit<-lm(mtcars$wt, mtcars$mpg)
fit<-lm(mtcars$wt ~ mtcars$mpg)
fit
xv<-c(0, 6)
fit$coefficients
fit$coefficients[1]
fit$coefficients[2]
fit<-lm(mtcars$mpg ~ mtcars$wt)
fit$coefficients[2]
fit$coefficients[1]
ggplot(mtcars, aes(x=wt, y=mpg, colour=trans2)) + geom_point() + geom_line(aes(x=xv, y=xv*fit$coefficients[2] + fit$coefficients[1]))
yv<-xv * fit$coefficients[2] + fit$coefficients[1]
yv
ggplot(mtcars, aes(x=wt, y=mpg, colour=trans2)) + geom_point() + geom_line(aes(x=xv, y=yv))
b0<- fit$coefficients[1]
b1<- fit$coefficients[2]
ggplot(mtcars, aes(x=wt, y=mpg, colour=trans2)) + geom_point() + geom_line(aes(y=wt*b1+b0))
ggplot(mtcars, aes(x=wt, y=mpg, colour=trans2)) + geom_point() + geom_line(aes(y=wt*b1+b0))
ggplot(mtcars, aes(x=wt, y=mpg, colour=trans2)) + geom_point() + geom_line(aes(y=wt*b1+b0, colour="black"))
ggplot(mtcars, aes(x=wt, y=mpg, colour=trans2)) + geom_point() + geom_line(aes(y=wt*b1+b0, colour="Regression"))
mtauto<-mtcars[mtcars$am==0,]
mtman<-mtcars[mtcars$am==1,]
errs <- mtcars$mpg - (mtcars$wt*b1+b0)
errsa <- mtauto$mpg - (mtauto$wt*b1a+b0a)
errsm <- mtman$mpg - (mtman$wt*b1m+b0m)
mtauto<-mtcars[mtcars$am==0,]
mtman<-mtcars[mtcars$am==1,]
fit<-lm(mtcars$mpg ~ mtcars$wt)
fitauto <- lm(mtauto$mpg ~ mtauto$wt)
fitman <- lm(mtman$mpg ~ mtman$wt)
b0<- fit$coefficients[1]
b1<- fit$coefficients[2]
b0a<- fitauto$coefficients[1]
b1a<- fitauto$coefficients[2]
b0m<- fitman$coefficients[1]
b1m<- fitman$coefficients[2]
errsa <- mtauto$mpg - (mtauto$wt*b1a+b0a)
errsm <- mtman$mpg - (mtman$wt*b1m+b0m)
ggplot(mtcars, aes(x=wt, y=mpg, colour="Combination")) +
geom_point(aes(y=errs)) +
geom_point(aes(x=mtauto$mpg, y=errsa, colour="Automatic")) +
geom_point(aes(x=mtman$mpg, y=errsm, colour="Manual"))
ggplot(mtcars, aes(x=wt, y=mpg, colour="Combination"))
ggplot(mtcars, aes(x=wt, y=mpg, colour="Combination")) + geom_point(aes(y=errs))
ggplot(mtcars, aes(x=wt, y=mpg, colour="Combination")) + geom_point(aes(y=errs))+geom_point(aes(x=mtauto$mpg, y=errsa, colour="Automatic"))
ggplot(mtcars, aes(x=wt, y=mpg, colour="Combination")) + geom_point(aes(y=errs))+geom_point(aes(data=mtauto, x=mtauto$mpg, y=errsa, colour="Automatic"))
ggplot(mtcars, aes(x=wt, y=mpg, colour="Combination")) + geom_point(aes(y=errs))+geom_point(aes(data=mtauto, x=mtauto$wt, y=errsa, colour="Automatic"))
ggplot(mtcars, aes(x=wt, y=mpg, colour="Combination")) + geom_point(aes(y=errs))+geom_point(aes(x=mtauto$wt, y=errsa, colour="Automatic"))
ggplot(mtcars, aes(x=wt, y=mpg, colour="Combination")) + geom_point(aes(y=errs))
ggplot(mtauto, aes(x=wt, y=mpg, colour="Combination")) + geom_point(aes(y=errsa))
ggplot(mtcars, aes(x=wt, y=mpg, colour="Combination")) + geom_point(aes(y=errs))
mtcars$Transmission <- Transmission
Transmission<-revalue(factor(mtcars$am),c("0"="Automatic", "1"="Manual"))
mtcars$Transmission <- Transmission
library(gridExtra)
install.packages("gridExtra")
library(gridExtra)
setwd("I:/Courses/DataScience/DataProducts/Project")
runApp()
library(shiny)
runApp()
b0
b1
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
b1m
b0m
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
devtools::install_github('rstudio/shinyapps')
devtools::install_github('rstudio/shinyapps')
shinyapps::setAccountInfo(name='michaelbausor', token='E32F14BDFF2EBBF2A197FE3E168829BF', secret='Kc5V013m0qo95HNTV392LCk77Pd9PIeqDaxb5YD4')
deployApp()
deployApp()
library(shinyapps)
deployApp()
deployApp()
deployApp()
runApp()
library(slidify)
setwd("I:/Courses/DataScience/DataProducts/Project")
author("shiny_app_presentation")
slidify('index.Rmd')
library(knitr)
browseURL(index.html)
browseURL('index.html')
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
browseURL('index.html')
publish(title="Miles per Gallon Prediction Presentation", "index.html", host="rpubs")
publish(title="Miles per Gallon Prediction Presentation", "index.html", host="rpubs")
library(RCurl)
publish(title="Miles per Gallon Prediction Presentation", "index.html", host="rpubs")
publish(title="Miles per Gallon Prediction Presentation", "index.html", host="rpubs")
find.package("RCurl")
.libPaths("")
publish(title="Miles per Gallon Prediction Presentation", "index.html", host="rpubs")
--- .class #id
slidify('index.Rmd')
browseURL('index.html')
browseURL('index.html')
